//@author Yağmur Doğan

import java.util.ArrayList;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class frmUpdate extends javax.swing.JFrame {

    Connection connection = null;
    DbHelper dbHelper = new DbHelper();
    DefaultTableModel model;
    Statement statement = null;
    ResultSet resultSet;
    ArrayList<Client> clients = null; //For data tables

    public frmUpdate() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        cmbUpdateClient = new javax.swing.JComboBox<>();
        lblUpdateClient = new javax.swing.JLabel();
        btnUpdateClient = new javax.swing.JButton();
        cmbUpdateMeal = new javax.swing.JComboBox<>();
        lblUpdateMeal = new javax.swing.JLabel();
        btnUpdateMeal = new javax.swing.JButton();
        cmbUpdateEmployee = new javax.swing.JComboBox<>();
        lblUpdateEmployee = new javax.swing.JLabel();
        btnUpdateEmployee = new javax.swing.JButton();
        cmbUpdatePayment = new javax.swing.JComboBox<>();
        lblUpdatePayment = new javax.swing.JLabel();
        btnUpdatePayment = new javax.swing.JButton();
        cmbUpdateReservation = new javax.swing.JComboBox<>();
        lblUpdateReservation = new javax.swing.JLabel();
        btnUpdateReservation = new javax.swing.JButton();
        lblDeletingData = new javax.swing.JLabel();
        btnUpdateTable = new javax.swing.JButton();
        btnUpdateAdd = new javax.swing.JButton();
        btnUpdateHomePage = new javax.swing.JButton();
        btnUpdateDelete = new javax.swing.JButton();
        txtClientIDUpdate = new javax.swing.JTextField();
        txtMealTypeUpdate = new javax.swing.JTextField();
        txtPIDUpdate = new javax.swing.JTextField();
        txtRIDUpdate = new javax.swing.JTextField();
        txtEmployeeIDUpdate = new javax.swing.JTextField();
        txtClientNewValue = new javax.swing.JTextField();
        txtReservationNewValue = new javax.swing.JTextField();
        txtEmployeeNewValue = new javax.swing.JTextField();
        txtMealNewValue = new javax.swing.JTextField();
        txtPaymentNewValue = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbUpdateClient.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        cmbUpdateClient.setForeground(new java.awt.Color(102, 0, 0));
        cmbUpdateClient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "client_name", "client_address", "client_gender", "client_fac", "client_type", "Edate", "pid", "rid", "cid" }));
        cmbUpdateClient.setToolTipText("");

        lblUpdateClient.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        lblUpdateClient.setForeground(new java.awt.Color(0, 0, 102));
        lblUpdateClient.setText("Please Select the data you are intented to update");

        btnUpdateClient.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdateClient.setForeground(new java.awt.Color(102, 0, 0));
        btnUpdateClient.setText("Update Client");
        btnUpdateClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateClientActionPerformed(evt);
            }
        });

        cmbUpdateMeal.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        cmbUpdateMeal.setForeground(new java.awt.Color(102, 0, 0));
        cmbUpdateMeal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "price", "cid" }));
        cmbUpdateMeal.setToolTipText("");
        cmbUpdateMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUpdateMealActionPerformed(evt);
            }
        });

        lblUpdateMeal.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        lblUpdateMeal.setForeground(new java.awt.Color(0, 0, 102));
        lblUpdateMeal.setText("Please Select the data you are intented to update");

        btnUpdateMeal.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdateMeal.setForeground(new java.awt.Color(102, 0, 0));
        btnUpdateMeal.setText("Update Meal");
        btnUpdateMeal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMealActionPerformed(evt);
            }
        });

        cmbUpdateEmployee.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        cmbUpdateEmployee.setForeground(new java.awt.Color(102, 0, 0));
        cmbUpdateEmployee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ename", "Eaddress", "Egender", "Sdate", "cid" }));
        cmbUpdateEmployee.setToolTipText("");

        lblUpdateEmployee.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        lblUpdateEmployee.setForeground(new java.awt.Color(0, 0, 102));
        lblUpdateEmployee.setText("Please Select the data you are intented to update");

        btnUpdateEmployee.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdateEmployee.setForeground(new java.awt.Color(102, 0, 0));
        btnUpdateEmployee.setText("Update Employee");
        btnUpdateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmployeeActionPerformed(evt);
            }
        });

        cmbUpdatePayment.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        cmbUpdatePayment.setForeground(new java.awt.Color(102, 0, 0));
        cmbUpdatePayment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pdate", "pay_meth", "meal_type" }));
        cmbUpdatePayment.setToolTipText("");

        lblUpdatePayment.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        lblUpdatePayment.setForeground(new java.awt.Color(0, 0, 102));
        lblUpdatePayment.setText("Please Select the data you are intented to update");

        btnUpdatePayment.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdatePayment.setForeground(new java.awt.Color(102, 0, 0));
        btnUpdatePayment.setText("Update Payment");
        btnUpdatePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePaymentActionPerformed(evt);
            }
        });

        cmbUpdateReservation.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        cmbUpdateReservation.setForeground(new java.awt.Color(102, 0, 0));
        cmbUpdateReservation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rdate", "res_meth", "meal_type" }));
        cmbUpdateReservation.setToolTipText("");

        lblUpdateReservation.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        lblUpdateReservation.setForeground(new java.awt.Color(0, 0, 102));
        lblUpdateReservation.setText("Please Select the data you are intented to update");

        btnUpdateReservation.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdateReservation.setForeground(new java.awt.Color(102, 0, 0));
        btnUpdateReservation.setText("Update Reservation");
        btnUpdateReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateReservationActionPerformed(evt);
            }
        });

        lblDeletingData.setFont(new java.awt.Font("Baskerville Old Face", 3, 24)); // NOI18N
        lblDeletingData.setForeground(new java.awt.Color(102, 0, 0));
        lblDeletingData.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDeletingData.setText("Updating Data");

        btnUpdateTable.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdateTable.setForeground(new java.awt.Color(0, 0, 102));
        btnUpdateTable.setText("Tables");
        btnUpdateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTableActionPerformed(evt);
            }
        });

        btnUpdateAdd.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdateAdd.setForeground(new java.awt.Color(0, 0, 102));
        btnUpdateAdd.setText("Add Data");
        btnUpdateAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAddActionPerformed(evt);
            }
        });

        btnUpdateHomePage.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdateHomePage.setForeground(new java.awt.Color(0, 0, 102));
        btnUpdateHomePage.setText("Log Out");
        btnUpdateHomePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateHomePageActionPerformed(evt);
            }
        });

        btnUpdateDelete.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        btnUpdateDelete.setForeground(new java.awt.Color(0, 0, 102));
        btnUpdateDelete.setText("Delete Data");
        btnUpdateDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDeleteActionPerformed(evt);
            }
        });

        txtClientIDUpdate.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtClientIDUpdate.setForeground(new java.awt.Color(0, 0, 102));
        txtClientIDUpdate.setText("ID");
        txtClientIDUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtClientIDUpdateMouseClicked(evt);
            }
        });

        txtMealTypeUpdate.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtMealTypeUpdate.setForeground(new java.awt.Color(0, 0, 102));
        txtMealTypeUpdate.setText("Meal Type");
        txtMealTypeUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMealTypeUpdateMouseClicked(evt);
            }
        });

        txtPIDUpdate.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtPIDUpdate.setForeground(new java.awt.Color(0, 0, 102));
        txtPIDUpdate.setText("ID");
        txtPIDUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPIDUpdateMouseClicked(evt);
            }
        });

        txtRIDUpdate.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtRIDUpdate.setForeground(new java.awt.Color(0, 0, 102));
        txtRIDUpdate.setText("ID");
        txtRIDUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtRIDUpdateMouseClicked(evt);
            }
        });

        txtEmployeeIDUpdate.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtEmployeeIDUpdate.setForeground(new java.awt.Color(0, 0, 102));
        txtEmployeeIDUpdate.setText("ID");
        txtEmployeeIDUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEmployeeIDUpdateMouseClicked(evt);
            }
        });

        txtClientNewValue.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtClientNewValue.setForeground(new java.awt.Color(0, 0, 102));
        txtClientNewValue.setText("New Value");
        txtClientNewValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtClientNewValueMouseClicked(evt);
            }
        });
        txtClientNewValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClientNewValueActionPerformed(evt);
            }
        });

        txtReservationNewValue.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtReservationNewValue.setForeground(new java.awt.Color(0, 0, 102));
        txtReservationNewValue.setText("New Value");
        txtReservationNewValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtReservationNewValueMouseClicked(evt);
            }
        });
        txtReservationNewValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReservationNewValueActionPerformed(evt);
            }
        });

        txtEmployeeNewValue.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtEmployeeNewValue.setForeground(new java.awt.Color(0, 0, 102));
        txtEmployeeNewValue.setText("New Value");
        txtEmployeeNewValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEmployeeNewValueMouseClicked(evt);
            }
        });
        txtEmployeeNewValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeNewValueActionPerformed(evt);
            }
        });

        txtMealNewValue.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtMealNewValue.setForeground(new java.awt.Color(0, 0, 102));
        txtMealNewValue.setText("New Value");
        txtMealNewValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMealNewValueMouseClicked(evt);
            }
        });
        txtMealNewValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMealNewValueActionPerformed(evt);
            }
        });

        txtPaymentNewValue.setFont(new java.awt.Font("Baskerville Old Face", 1, 14)); // NOI18N
        txtPaymentNewValue.setForeground(new java.awt.Color(0, 0, 102));
        txtPaymentNewValue.setText("New Value");
        txtPaymentNewValue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPaymentNewValueMouseClicked(evt);
            }
        });
        txtPaymentNewValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentNewValueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdateHomePage, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpdateAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(btnUpdateDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpdateTable, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lblDeletingData, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(txtRIDUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                .addComponent(txtMealTypeUpdate)
                                                                                .addComponent(txtPIDUpdate)))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(lblUpdateMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(lblUpdateEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(lblUpdatePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(lblUpdateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(cmbUpdateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(lblUpdateClient, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(cmbUpdatePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(cmbUpdateEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(cmbUpdateMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(cmbUpdateClient, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                                        .addComponent(txtClientIDUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtEmployeeIDUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(48, 48, 48)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(txtPaymentNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtEmployeeNewValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(txtMealNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(txtClientNewValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(612, 612, 612)
                                                .addComponent(txtReservationNewValue, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUpdateClient, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdateMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdateEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdatePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(lblDeletingData, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtClientNewValue)
                                        .addComponent(btnUpdateClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(cmbUpdateClient, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblUpdateClient, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtClientIDUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUpdateMeal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(cmbUpdateMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblUpdateMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtMealTypeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtMealNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUpdateEmployee, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(cmbUpdateEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblUpdateEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtEmployeeIDUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtEmployeeNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUpdatePayment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(cmbUpdatePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblUpdatePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPIDUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPaymentNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnUpdateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(lblUpdateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cmbUpdateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtRIDUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtReservationNewValue, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                                .addGap(140, 140, 140)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnUpdateTable, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdateAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdateDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdateHomePage, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(154, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void cmbUpdateMealActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnUpdateTableActionPerformed(java.awt.event.ActionEvent evt) {
        new frmTable().show();
        this.hide();
    }

    private void btnUpdateAddActionPerformed(java.awt.event.ActionEvent evt) {
        new frmAdd().show();
        this.hide();
    }

    private void btnUpdateHomePageActionPerformed(java.awt.event.ActionEvent evt) {

        new frmIntro().show();
        this.hide();
    }

    private void btnUpdateDeleteActionPerformed(java.awt.event.ActionEvent evt) {
        new frmDelete().show();
        this.hide();
    }

    private void btnUpdateClientActionPerformed(java.awt.event.ActionEvent evt) {
        PreparedStatement statement = null;

        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 0;";
            String setSafeUpdates = "set sql_safe_updates = 0;";
            statement = connection.prepareStatement(setForeignKeyCheck);
            statement = connection.prepareStatement(setSafeUpdates);
        } catch (SQLException e) {

        }
        try{

            String updateInstruction = "update client set " + cmbUpdateClient.getSelectedItem().toString()+
                    " = '" + txtClientNewValue.getText() +  "' where client_id = ?;";

            statement = connection.prepareStatement(updateInstruction);
            statement.setInt(1, Integer.valueOf(txtClientIDUpdate.getText()));

            int result = statement.executeUpdate();
            System.out.print(result);

            JOptionPane.showMessageDialog(this, "Updated Client Data!");

        }catch(SQLException exception){
            dbHelper.showError(exception);
        }
        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 1;";
            statement = connection.prepareStatement(setForeignKeyCheck);
        } catch (SQLException e) {

        }
        finally{

            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
            }
        }
    }

    private void txtClientIDUpdateMouseClicked(java.awt.event.MouseEvent evt) {
        txtClientIDUpdate.setText("");
    }

    private void txtMealTypeUpdateMouseClicked(java.awt.event.MouseEvent evt) {
        txtMealTypeUpdate.setText("");
    }

    private void txtPIDUpdateMouseClicked(java.awt.event.MouseEvent evt) {
        txtPIDUpdate.setText("");
    }

    private void txtRIDUpdateMouseClicked(java.awt.event.MouseEvent evt) {
        txtRIDUpdate.setText("");
    }

    private void txtEmployeeIDUpdateMouseClicked(java.awt.event.MouseEvent evt) {
        txtEmployeeIDUpdate.setText("");
    }

    private void txtClientNewValueMouseClicked(java.awt.event.MouseEvent evt) {
        txtClientNewValue.setText("");
    }

    private void txtClientNewValueActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void txtReservationNewValueMouseClicked(java.awt.event.MouseEvent evt) {
        txtReservationNewValue.setText("");
    }

    private void txtReservationNewValueActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void txtEmployeeNewValueMouseClicked(java.awt.event.MouseEvent evt) {
        txtEmployeeNewValue.setText("");
    }

    private void txtEmployeeNewValueActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void txtMealNewValueMouseClicked(java.awt.event.MouseEvent evt) {
        txtMealNewValue.setText("");
    }

    private void txtMealNewValueActionPerformed(java.awt.event.ActionEvent evt) {

    }

    private void txtPaymentNewValueMouseClicked(java.awt.event.MouseEvent evt) {
        txtPaymentNewValue.setText("");
    }

    private void txtPaymentNewValueActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void btnUpdateMealActionPerformed(java.awt.event.ActionEvent evt) {
        PreparedStatement statement = null;

        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 0;";
            String setSafeUpdates = "set sql_safe_updates = 0;";
            statement = connection.prepareStatement(setForeignKeyCheck);
            statement = connection.prepareStatement(setSafeUpdates);
        } catch (SQLException e) {

        }
        try{

            String updateInstruction = "update meal set " + cmbUpdateMeal.getSelectedItem().toString()+
                    " = '" + txtMealNewValue.getText() +  "' where meal_type = ?;";

            statement = connection.prepareStatement(updateInstruction);
            statement.setString(1, txtMealTypeUpdate.getText());

            int result = statement.executeUpdate();
            System.out.print(result);

            JOptionPane.showMessageDialog(this, "Updated Meal Data!");

        }catch(SQLException exception){
            dbHelper.showError(exception);
        }
        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 1;";
            statement = connection.prepareStatement(setForeignKeyCheck);
        } catch (SQLException e) {

        }
        finally{

            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
            }
        }
    }

    private void btnUpdateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {
        PreparedStatement statement = null;

        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 0;";
            String setSafeUpdates = "set sql_safe_updates = 0;";
            statement = connection.prepareStatement(setForeignKeyCheck);
            statement = connection.prepareStatement(setSafeUpdates);
        } catch (SQLException e) {

        }
        try{

            String updateInstruction = "update employee set " + cmbUpdateEmployee.getSelectedItem().toString()+
                    " = '" + txtEmployeeNewValue.getText() +  "' where meal_type = ?;";

            statement = connection.prepareStatement(updateInstruction);
            statement.setInt(1, Integer.valueOf(txtEmployeeIDUpdate.getText()));

            int result = statement.executeUpdate();
            System.out.print(result);

            JOptionPane.showMessageDialog(this, "Updated Employee Data!");

        }catch(SQLException exception){
            dbHelper.showError(exception);
        }
        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 1;";
            statement = connection.prepareStatement(setForeignKeyCheck);
        } catch (SQLException e) {

        }
        finally{

            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
            }
        }
    }

    private void btnUpdatePaymentActionPerformed(java.awt.event.ActionEvent evt) {
        PreparedStatement statement = null;

        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 0;";
            String setSafeUpdates = "set sql_safe_updates = 0;";
            statement = connection.prepareStatement(setForeignKeyCheck);
            statement = connection.prepareStatement(setSafeUpdates);
        } catch (SQLException e) {

        }
        try{

            String updateInstruction = "update paysfor set " + cmbUpdatePayment.getSelectedItem().toString()+
                    " = '" + txtPaymentNewValue.getText() +  "' where meal_type = ?;";

            statement = connection.prepareStatement(updateInstruction);
            statement.setInt(1, Integer.valueOf(txtPIDUpdate.getText()));

            int result = statement.executeUpdate();
            System.out.print(result);

            JOptionPane.showMessageDialog(this, "Updated Payment Data!");

        }catch(SQLException exception){
            dbHelper.showError(exception);
        }
        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 1;";
            statement = connection.prepareStatement(setForeignKeyCheck);
        } catch (SQLException e) {

        }
        finally{

            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
            }
        }
    }

    private void btnUpdateReservationActionPerformed(java.awt.event.ActionEvent evt) {
        PreparedStatement statement = null;

        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 0;";
            String setSafeUpdates = "set sql_safe_updates = 0;";
            statement = connection.prepareStatement(setForeignKeyCheck);
            statement = connection.prepareStatement(setSafeUpdates);
        } catch (SQLException e) {

        }
        try{

            String updateInstruction = "update reservatesfor set " + cmbUpdateReservation.getSelectedItem().toString()+
                    " = '" + txtReservationNewValue.getText() +  "' where meal_type = ?;";

            statement = connection.prepareStatement(updateInstruction);
            statement.setInt(1, Integer.valueOf(txtRIDUpdate.getText()));

            int result = statement.executeUpdate();
            System.out.print(result);

            JOptionPane.showMessageDialog(this, "Updated Reservation Data!");

        }catch(SQLException exception){
            dbHelper.showError(exception);
        }
        try {
            connection = dbHelper.getConnection();
            String setForeignKeyCheck = "SET foreign_key_checks = 1;";
            statement = connection.prepareStatement(setForeignKeyCheck);
        } catch (SQLException e) {

        }
        finally{

            try {
                statement.close();
                connection.close();
            } catch (SQLException ex) {
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUpdate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmUpdate().setVisible(true);
            }
        });
    }





    // Variables declaration - do not modify
    private javax.swing.JButton btnUpdateAdd;
    private javax.swing.JButton btnUpdateClient;
    private javax.swing.JButton btnUpdateDelete;
    private javax.swing.JButton btnUpdateEmployee;
    private javax.swing.JButton btnUpdateHomePage;
    private javax.swing.JButton btnUpdateMeal;
    private javax.swing.JButton btnUpdatePayment;
    private javax.swing.JButton btnUpdateReservation;
    private javax.swing.JButton btnUpdateTable;
    private javax.swing.JComboBox<String> cmbUpdateClient;
    private javax.swing.JComboBox<String> cmbUpdateEmployee;
    private javax.swing.JComboBox<String> cmbUpdateMeal;
    private javax.swing.JComboBox<String> cmbUpdatePayment;
    private javax.swing.JComboBox<String> cmbUpdateReservation;
    private javax.swing.JLabel lblDeletingData;
    private javax.swing.JLabel lblUpdateClient;
    private javax.swing.JLabel lblUpdateEmployee;
    private javax.swing.JLabel lblUpdateMeal;
    private javax.swing.JLabel lblUpdatePayment;
    private javax.swing.JLabel lblUpdateReservation;
    private javax.swing.JTextField txtClientIDUpdate;
    private javax.swing.JTextField txtClientNewValue;
    private javax.swing.JTextField txtEmployeeIDUpdate;
    private javax.swing.JTextField txtEmployeeNewValue;
    private javax.swing.JTextField txtMealNewValue;
    private javax.swing.JTextField txtMealTypeUpdate;
    private javax.swing.JTextField txtPIDUpdate;
    private javax.swing.JTextField txtPaymentNewValue;
    private javax.swing.JTextField txtRIDUpdate;
    private javax.swing.JTextField txtReservationNewValue;
    // End of variables declaration
}
